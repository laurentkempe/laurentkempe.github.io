<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Laurent Kempé</title>
  
  <subtitle>One of the Tech Head Brothers</subtitle>
  <link href="https://laurentkempe.com/atom.xml" rel="self"/>
  
  <link href="https://laurentkempe.com/"/>
  <updated>2020-10-17T07:35:08.064Z</updated>
  <id>https://laurentkempe.com/</id>
  
  <author>
    <name>Laurent Kempé</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Automate developer work using Git Aliases</title>
    <link href="https://laurentkempe.com/2020/02/28/Automate-developer-work-using-Git-Aliases/"/>
    <id>https://laurentkempe.com/2020/02/28/Automate-developer-work-using-Git-Aliases/</id>
    <published>2020-02-28T15:26:27.000Z</published>
    <updated>2020-10-17T07:35:08.064Z</updated>
    
    
    <summary type="html">&lt;p&gt;I am using Git for many, many years. I am a big fan of it. How could that be different when you had to use versioning systems like CVS, SVN… I even took influence so that the whole company I work for migrates to it.&lt;/p&gt;
&lt;p&gt;Over the years, I have used different Git clients, tried to work only from my IDE without much liking it.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Git" scheme="https://laurentkempe.com/tags/Git/"/>
    
    <category term="PowerShell" scheme="https://laurentkempe.com/tags/PowerShell/"/>
    
    <category term="Windows" scheme="https://laurentkempe.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>gRPC and C# 8 Async stream cancellation</title>
    <link href="https://laurentkempe.com/2019/09/25/gRPC-and-csharp-8-Async-stream-cancellation/"/>
    <id>https://laurentkempe.com/2019/09/25/gRPC-and-csharp-8-Async-stream-cancellation/</id>
    <published>2019-09-25T20:06:12.000Z</published>
    <updated>2020-10-17T07:35:08.084Z</updated>
    
    
    <summary type="html">&lt;p&gt;In the previous post “&lt;a href=&quot;https://laurentkempe.com/2019/09/18/gRPC-and-csharp-8-Async-stream/&quot;&gt;gRPC and C# 8 Async stream&lt;/a&gt;“, we looked at how gRPC server stream and C# 8 Async stream work great together. In this post, we are looking at the way we can, from the client, stop the server to stream results back.&lt;/p&gt;</summary>
    
    
    
    
    <category term="ASP.NET Core" scheme="https://laurentkempe.com/tags/ASP-NET-Core/"/>
    
    <category term="C#" scheme="https://laurentkempe.com/tags/C/"/>
    
    <category term="gRPC" scheme="https://laurentkempe.com/tags/gRPC/"/>
    
  </entry>
  
  <entry>
    <title>gRPC and C# 8 Async stream</title>
    <link href="https://laurentkempe.com/2019/09/18/gRPC-and-csharp-8-Async-stream/"/>
    <id>https://laurentkempe.com/2019/09/18/gRPC-and-csharp-8-Async-stream/</id>
    <published>2019-09-18T17:23:00.000Z</published>
    <updated>2020-10-17T07:35:08.084Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://grpc.io/&quot;&gt;gRPC&lt;/a&gt; and its idea to describe an API in a standardized file, which can generate both client and server code to interact in different languages is a compelling idea.&lt;br&gt;In this post, I would like to have a quick look at the experience you would have with gRPC streaming capability and the new &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-8.0/async-streams&quot;&gt;C# 8 async streams&lt;/a&gt;, which sounds like a perfect match.&lt;/p&gt;</summary>
    
    
    
    
    <category term="ASP.NET Core" scheme="https://laurentkempe.com/tags/ASP-NET-Core/"/>
    
    <category term="C#" scheme="https://laurentkempe.com/tags/C/"/>
    
    <category term="gRPC" scheme="https://laurentkempe.com/tags/gRPC/"/>
    
  </entry>
  
  <entry>
    <title>WPF and .NET Generic Host with .NET Core 3.0</title>
    <link href="https://laurentkempe.com/2019/09/03/WPF-and-dotnet-Generic-Host-with-dotnet-Core-3-0/"/>
    <id>https://laurentkempe.com/2019/09/03/WPF-and-dotnet-Generic-Host-with-dotnet-Core-3-0/</id>
    <published>2019-09-03T20:21:08.000Z</published>
    <updated>2020-10-17T07:35:08.080Z</updated>
    
    
    <summary type="html">&lt;p&gt;I like very much the idea of a &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/generic-host?view=aspnetcore-3.0&quot;&gt;.NET Generic Host in the MSDN documentation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An object that encapsulates an app’s resources, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dependency injection (DI)&lt;/li&gt;
&lt;li&gt;Logging&lt;/li&gt;
&lt;li&gt;Configuration&lt;/li&gt;
&lt;li&gt;IHostedService implementations&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term=".NET Core" scheme="https://laurentkempe.com/tags/NET-Core/"/>
    
    <category term="WPF" scheme="https://laurentkempe.com/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>WPF and IOC on .NET Core 3.0</title>
    <link href="https://laurentkempe.com/2019/04/18/WPF-and-IOC-on-NET-Core-3-0/"/>
    <id>https://laurentkempe.com/2019/04/18/WPF-and-IOC-on-NET-Core-3-0/</id>
    <published>2019-04-18T08:57:56.000Z</published>
    <updated>2020-10-17T07:35:08.080Z</updated>
    
    
    <summary type="html">&lt;p&gt;At work, we are planning to migrate our WPF application from .NET Framework 4.7 to &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0&quot;&gt;.NET Core 3.0&lt;/a&gt;. The main reason for doing so is that it was always a big pain to organize the updates of the .NET Framework on our customer machines. So being able to bundle .NET Core with our application is a big plus for us. Then, for sure, we are looking for the performance improvements brought by .NET Core and finally the new capabilities brought by the fast pace of innovation of .NET Core.&lt;/p&gt;</summary>
    
    
    
    
    <category term=".NET Core" scheme="https://laurentkempe.com/tags/NET-Core/"/>
    
    <category term="WPF" scheme="https://laurentkempe.com/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>Azure DevOps for Visual Studio Extensions</title>
    <link href="https://laurentkempe.com/2019/03/05/Azure-DevOps-for-Visual-Studio-Extensions/"/>
    <id>https://laurentkempe.com/2019/03/05/Azure-DevOps-for-Visual-Studio-Extensions/</id>
    <published>2019-03-05T21:14:42.000Z</published>
    <updated>2020-10-17T07:35:08.064Z</updated>
    
    
    <summary type="html">&lt;p&gt;As you might have guessed reading some of my older posts, I like to automate things which I believe a computer should do in place of humans.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Visual Studio" scheme="https://laurentkempe.com/tags/Visual-Studio/"/>
    
    <category term="Azure DevOps" scheme="https://laurentkempe.com/tags/Azure-DevOps/"/>
    
    <category term="Chocolatey" scheme="https://laurentkempe.com/tags/Chocolatey/"/>
    
    <category term="Github" scheme="https://laurentkempe.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Dynamically compile and run code using .NET Core 3.0</title>
    <link href="https://laurentkempe.com/2019/02/18/dynamically-compile-and-run-code-using-dotNET-Core-3.0/"/>
    <id>https://laurentkempe.com/2019/02/18/dynamically-compile-and-run-code-using-dotNET-Core-3.0/</id>
    <published>2019-02-18T19:30:12.000Z</published>
    <updated>2020-10-17T07:35:08.068Z</updated>
    
    
    <summary type="html">&lt;p&gt;Let’ see in this blog post the new possibility offered by &lt;strong&gt;.NET Core 3.0 preview 2&lt;/strong&gt; to load and unload assemblies at run time using &lt;strong&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/src/System/Runtime/Loader/AssemblyLoadContext.cs#L14&quot;&gt;AssemblyLoadContext&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</summary>
    
    
    
    
    <category term=".NET Core" scheme="https://laurentkempe.com/tags/NET-Core/"/>
    
    <category term="Roslyn" scheme="https://laurentkempe.com/tags/Roslyn/"/>
    
  </entry>
  
  <entry>
    <title>.NET Core Community online Hackathon</title>
    <link href="https://laurentkempe.com/2018/06/06/dotnet-core-community-online-hackathon/"/>
    <id>https://laurentkempe.com/2018/06/06/dotnet-core-community-online-hackathon/</id>
    <published>2018-06-06T06:20:54.000Z</published>
    <updated>2020-10-17T07:35:08.064Z</updated>
    
    
    <summary type="html">&lt;p&gt;On Saturday, June 2, 2018, I had the chance to participate in the .NET Core Community online Hackathon.&lt;/p&gt;
&lt;p&gt;As I got up really early this Saturday morning, I took the opportunity to participate. My goal was to see something new and learn a bit about how .NET Core is built and gain some new experience.&lt;/p&gt;</summary>
    
    
    
    
    <category term=".NET Core" scheme="https://laurentkempe.com/tags/NET-Core/"/>
    
  </entry>
  
  <entry>
    <title>Automating my development machine installation</title>
    <link href="https://laurentkempe.com/2018/06/01/Automating-development-machine-installation/"/>
    <id>https://laurentkempe.com/2018/06/01/Automating-development-machine-installation/</id>
    <published>2018-06-01T16:15:12.000Z</published>
    <updated>2020-10-17T07:35:08.084Z</updated>
    
    
    <summary type="html">&lt;p&gt;Since Microsoft went to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/deployment/update/waas-quick-start&quot;&gt;Windows as a service&lt;/a&gt;, so since Windows 10, I fully re-install my development machine, a Surface Book, with each main release of Windows.&lt;/p&gt;
&lt;p&gt;As I hate to lose time, I searched a way to automate it, so that it is fast, repeatable and does the work, not me.&lt;/p&gt;</summary>
    
    
    
    
    <category term="PowerShell" scheme="https://laurentkempe.com/tags/PowerShell/"/>
    
    <category term="Windows" scheme="https://laurentkempe.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Debugging into ASP.NET Core 2.0 source code</title>
    <link href="https://laurentkempe.com/2017/09/26/Debugging-into-ASP.NET-Core-2.0-source-code/"/>
    <id>https://laurentkempe.com/2017/09/26/Debugging-into-ASP.NET-Core-2.0-source-code/</id>
    <published>2017-09-26T18:44:11.000Z</published>
    <updated>2020-10-17T07:35:08.064Z</updated>
    
    
    <summary type="html">&lt;p&gt;I am just back from 2.5 months unpaid leave which I used to spend time with my family. So, I almost did not spend time with software development. One exception is that I wanted to be able to configure Visual Studio 2017 to be able to debug into ASP.NET Core 2.0 source code.&lt;/p&gt;</summary>
    
    
    
    
    <category term="ASP.NET Core" scheme="https://laurentkempe.com/tags/ASP-NET-Core/"/>
    
    <category term="Visual Studio 2017" scheme="https://laurentkempe.com/tags/Visual-Studio-2017/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Core MVC app running on Raspberry Pi</title>
    <link href="https://laurentkempe.com/2017/04/14/ASPNET-Core-MVC-app-running-on-raspberry-pi/"/>
    <id>https://laurentkempe.com/2017/04/14/ASPNET-Core-MVC-app-running-on-raspberry-pi/</id>
    <published>2017-04-14T15:26:06.000Z</published>
    <updated>2020-10-17T07:35:08.060Z</updated>
    
    
    <summary type="html">&lt;p&gt;After running a first console app on my Raspberry Pi 3, I had to try ASP.NET Core and API. Two weeks ago when I posted &lt;a href=&quot;http://laurentkempe.com/2017/04/03/Dotnet-Core-app-running-on-raspberry-pi/&quot;&gt;“.NET Core console app running on Raspberry Pi”&lt;/a&gt;, I could make API working, but I had no chance with MVC. Today it worked!&lt;/p&gt;</summary>
    
    
    
    
    <category term=".NET Core" scheme="https://laurentkempe.com/tags/NET-Core/"/>
    
    <category term="Raspberry Pi" scheme="https://laurentkempe.com/tags/Raspberry-Pi/"/>
    
    <category term="Linux" scheme="https://laurentkempe.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>.NET Core console app running on Raspberry Pi</title>
    <link href="https://laurentkempe.com/2017/04/03/Dotnet-Core-app-running-on-raspberry-pi/"/>
    <id>https://laurentkempe.com/2017/04/03/Dotnet-Core-app-running-on-raspberry-pi/</id>
    <published>2017-04-03T19:40:07.000Z</published>
    <updated>2020-10-17T07:35:08.068Z</updated>
    
    
    <summary type="html">&lt;p&gt;Now that there is a distribution of .NET Core on a Linux distro running on my &lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-3-model-b/&quot;&gt;Raspberry Pi 3&lt;/a&gt;, I had to try it.&lt;/p&gt;
&lt;p&gt;In this post, I will explain all the steps I had to execute to be able to run my first Hello World application.&lt;/p&gt;</summary>
    
    
    
    
    <category term=".NET Core" scheme="https://laurentkempe.com/tags/NET-Core/"/>
    
    <category term="Raspberry Pi" scheme="https://laurentkempe.com/tags/Raspberry-Pi/"/>
    
    <category term="Linux" scheme="https://laurentkempe.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Build, ship and run ASP.NET Core on Microsoft Azure using Docker Cloud</title>
    <link href="https://laurentkempe.com/2016/07/18/Build-ship-and-run-ASP-NET-Core-on-Microsoft-Azure-using-Docker-Cloud/"/>
    <id>https://laurentkempe.com/2016/07/18/Build-ship-and-run-ASP-NET-Core-on-Microsoft-Azure-using-Docker-Cloud/</id>
    <published>2016-07-18T17:04:21.000Z</published>
    <updated>2020-10-17T07:35:08.064Z</updated>
    
    
    <summary type="html">&lt;p&gt;In the last posts, we looked at the code to &lt;a href=&quot;http://laurentkempe.com/2016/05/16/ASP-NET-Core-RC2-Docker-and-HipChat-Connect-add-on/&quot;&gt;build a HipChat Connect add-on with ASP.NET Core&lt;/a&gt;, &lt;a href=&quot;http://laurentkempe.com/2016/06/08/Deploying-Docker-containers-running-ASPNET-Core-RC2-to-Microsoft-Azure-Cloud/&quot;&gt;run the solution in a Docker container&lt;/a&gt; and &lt;a href=&quot;http://laurentkempe.com/2016/06/20/Free-HTTPS-certificates-for-Docker-containers-running-ASPNET-Core-RC2-on-Microsoft-Azure/&quot;&gt;secure the access to the application with a valid HTTPS certificate that we got from Let’s Encrypt for free&lt;/a&gt; and finally deploy all of this on Azure!&lt;/p&gt;</summary>
    
    
    
    
    <category term="ASP.NET Core" scheme="https://laurentkempe.com/tags/ASP-NET-Core/"/>
    
    <category term="Docker" scheme="https://laurentkempe.com/tags/Docker/"/>
    
    <category term="HipChat Connect" scheme="https://laurentkempe.com/tags/HipChat-Connect/"/>
    
    <category term="Microsoft Azure" scheme="https://laurentkempe.com/tags/Microsoft-Azure/"/>
    
  </entry>
  
  <entry>
    <title>Free HTTPS certificates for Docker containers running ASP.NET Core RC2 on Microsoft Azure</title>
    <link href="https://laurentkempe.com/2016/06/20/Free-HTTPS-certificates-for-Docker-containers-running-ASPNET-Core-RC2-on-Microsoft-Azure/"/>
    <id>https://laurentkempe.com/2016/06/20/Free-HTTPS-certificates-for-Docker-containers-running-ASPNET-Core-RC2-on-Microsoft-Azure/</id>
    <published>2016-06-20T17:51:30.000Z</published>
    <updated>2020-10-17T07:35:08.068Z</updated>
    
    
    <summary type="html">&lt;p&gt;Following my previous posts on &lt;a href=&quot;&quot;&gt;ASP.NET Core RC2, Docker and HipChat Connect add-on&lt;/a&gt; and &lt;a href=&quot;&quot;&gt;Deploying Docker containers running ASP.NET Core RC2 to Microsoft Azure Cloud&lt;/a&gt; I needed, as promised in the last post, to come with a solution to secure the whole with an HTTPS certificate!&lt;/p&gt;</summary>
    
    
    
    
    <category term="ASP.NET Core RC2" scheme="https://laurentkempe.com/tags/ASP-NET-Core-RC2/"/>
    
    <category term="Docker" scheme="https://laurentkempe.com/tags/Docker/"/>
    
    <category term="HipChat Connect" scheme="https://laurentkempe.com/tags/HipChat-Connect/"/>
    
    <category term="Microsoft Azure" scheme="https://laurentkempe.com/tags/Microsoft-Azure/"/>
    
  </entry>
  
  <entry>
    <title>Deploying Docker containers running ASP.NET Core RC2 to Microsoft Azure Cloud</title>
    <link href="https://laurentkempe.com/2016/06/08/Deploying-Docker-containers-running-ASPNET-Core-RC2-to-Microsoft-Azure-Cloud/"/>
    <id>https://laurentkempe.com/2016/06/08/Deploying-Docker-containers-running-ASPNET-Core-RC2-to-Microsoft-Azure-Cloud/</id>
    <published>2016-06-08T11:45:01.000Z</published>
    <updated>2020-10-17T07:35:08.064Z</updated>
    
    
    <summary type="html">&lt;p&gt;Following my previous post on &lt;a href=&quot;https://laurentkempe.com/2016/05/16/ASP-NET-Core-RC2-Docker-and-HipChat-Connect-add-on/&quot;&gt;ASP.NET Core RC2, Docker and HipChat Connect add-on&lt;/a&gt; I wanted to learn the next step which is to deploy my Docker container on the Microsoft Azure Cloud!&lt;/p&gt;</summary>
    
    
    
    
    <category term="ASP.NET Core RC2" scheme="https://laurentkempe.com/tags/ASP-NET-Core-RC2/"/>
    
    <category term="Docker" scheme="https://laurentkempe.com/tags/Docker/"/>
    
    <category term="HipChat Connect" scheme="https://laurentkempe.com/tags/HipChat-Connect/"/>
    
    <category term="Microsoft Azure" scheme="https://laurentkempe.com/tags/Microsoft-Azure/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Core RC2, Docker and HipChat Connect add-on</title>
    <link href="https://laurentkempe.com/2016/05/16/ASP-NET-Core-RC2-Docker-and-HipChat-Connect-add-on/"/>
    <id>https://laurentkempe.com/2016/05/16/ASP-NET-Core-RC2-Docker-and-HipChat-Connect-add-on/</id>
    <published>2016-05-16T18:37:03.000Z</published>
    <updated>2020-10-17T07:35:08.060Z</updated>
    
    
    <summary type="html">&lt;p&gt;This weekend ASP.NET Core RC2 was starting to show up! And it finally was &lt;a href=&quot;https://blogs.msdn.microsoft.com/webdev/2016/05/16/announcing-asp-net-core-rc2/&quot;&gt;released today&lt;/a&gt;. Get it fresh from &lt;a href=&quot;https://www.microsoft.com/net/core&quot;&gt;here&lt;/a&gt;. We had here a long three days weekend with quite awful gray clouds and cold weather for the season, so a perfect excuse to get started!&lt;/p&gt;</summary>
    
    
    
    
    <category term="ASP.NET Core RC2" scheme="https://laurentkempe.com/tags/ASP-NET-Core-RC2/"/>
    
    <category term="Docker" scheme="https://laurentkempe.com/tags/Docker/"/>
    
    <category term="HipChat Connect" scheme="https://laurentkempe.com/tags/HipChat-Connect/"/>
    
  </entry>
  
  <entry>
    <title>Docker for Windows Beta review</title>
    <link href="https://laurentkempe.com/2016/04/30/Docker-for-Windows-Beta-review/"/>
    <id>https://laurentkempe.com/2016/04/30/Docker-for-Windows-Beta-review/</id>
    <published>2016-04-30T09:27:50.000Z</published>
    <updated>2020-10-17T07:35:08.064Z</updated>
    
    
    <summary type="html">&lt;p&gt;I have been playing with all Docker tools for quite some time now! Started with the command line and all its commands like docker start,  stop, ps, etc… Then I tried Kitematic and even compiled it from the source before it was supporting Windows! Then Docker Toolbox.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Docker" scheme="https://laurentkempe.com/tags/Docker/"/>
    
    <category term="Visual Studio" scheme="https://laurentkempe.com/tags/Visual-Studio/"/>
    
    <category term="Windows" scheme="https://laurentkempe.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Ease Github Pull Request code review</title>
    <link href="https://laurentkempe.com/2016/04/18/Ease-Github-Pull-Request-code-review/"/>
    <id>https://laurentkempe.com/2016/04/18/Ease-Github-Pull-Request-code-review/</id>
    <published>2016-04-18T13:21:47.000Z</published>
    <updated>2020-10-17T07:35:08.068Z</updated>
    
    
    <summary type="html">&lt;p&gt;Even if online &lt;a href=&quot;https://help.github.com/articles/using-pull-requests/&quot;&gt;Github Pull Request&lt;/a&gt; is a nice and effective tool, in some situation you need to open your solution in Visual Studio to verify something.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Git" scheme="https://laurentkempe.com/tags/Git/"/>
    
    <category term="Visual Studio" scheme="https://laurentkempe.com/tags/Visual-Studio/"/>
    
    <category term="GitHub" scheme="https://laurentkempe.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Hosting nugets in TeamCity</title>
    <link href="https://laurentkempe.com/2016/04/14/Hosting-nugets-in-TeamCity/"/>
    <id>https://laurentkempe.com/2016/04/14/Hosting-nugets-in-TeamCity/</id>
    <published>2016-04-14T20:04:11.000Z</published>
    <updated>2020-10-17T07:35:08.068Z</updated>
    
    
    <summary type="html">&lt;p&gt;In the past in my team, we were storing the Telerik assemblies into our SVN repository then in Git! I wasn’t happy about that for a really long time. Each releases our repository was growing much more than it was needed for nothing!&lt;/p&gt;</summary>
    
    
    
    
    <category term=".NET Development" scheme="https://laurentkempe.com/tags/NET-Development/"/>
    
    <category term="continuous integration" scheme="https://laurentkempe.com/tags/continuous-integration/"/>
    
  </entry>
  
  <entry>
    <title>Upload files to DropBox from PowerShell</title>
    <link href="https://laurentkempe.com/2016/04/07/Upload-files-to-DropBox-from-PowerShell/"/>
    <id>https://laurentkempe.com/2016/04/07/Upload-files-to-DropBox-from-PowerShell/</id>
    <published>2016-04-07T19:41:32.000Z</published>
    <updated>2020-10-17T07:35:08.080Z</updated>
    
    
    <summary type="html">&lt;p&gt;When I &lt;a href=&quot;http://laurentkempe.com/2016/04/05/Moving-to-Cake-CSharp-Make/&quot;&gt;migrated our build to Cake (C# Make)&lt;/a&gt; we had one requirement which was to upload some of the build output’s artifacts to DropBox at the end of the build.&lt;/p&gt;</summary>
    
    
    
    
    <category term="PowerShell" scheme="https://laurentkempe.com/tags/PowerShell/"/>
    
    <category term="continuous integration" scheme="https://laurentkempe.com/tags/continuous-integration/"/>
    
  </entry>
  
</feed>
